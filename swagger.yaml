openapi: 3.0.0

paths:
  /login:
    post:
      tags:
        - Access
      summary: Rota de Autenticação
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
      responses:
        '200':
          description: Token de login gerado
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  /refresh-token:
    post:
      tags:
        - Access
      summary: Rota de atualização do token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refreshToken:
                  type: string
      responses:
        '200':
          description: Token de login atualizado
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'

  /states:
    get:
      tags:
        - State
      summary: Rota de listagem de estados
      responses:
        '200':
          $ref: '#/components/responses/200List'
        '500':
          $ref: '#/components/responses/500'
  /states/{id}/cities:
    parameters:
      - $ref: '#/components/parameters/idParam'
    get:
      tags:
        - State
      summary: Rota de detalhamento de estado
      responses:
        '200':
          $ref: '#/components/responses/200Detail'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'

  /users:
    post:
      tags:
        - User
      summary: Rota de criação de usuário
      requestBody:
        required: true
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/User'
      responses:
        '201':
          $ref: '#/components/responses/201'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    get:
      tags:
        - User
      summary: Rota de listagem de usuários
      security:
        - authenticationUser: []
      parameters:
        - $ref: '#/components/parameters/nameParam'
        - in: query
          name: email
          description: E-mail do usuário
          schema:
            type: string
            format: email
        - $ref: '#/components/parameters/limitParam'
        - $ref: '#/components/parameters/pageParam'
      responses:
        '200':
          $ref: '#/components/responses/200List'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
  /users/{id}:
    parameters:
      - $ref: '#/components/parameters/idParam'
    get:
      tags:
        - User
      summary: Rota de detalhamento de usuário
      security:
        - authenticationUser: []
      responses:
        '200':
          $ref: '#/components/responses/200Detail'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    delete:
      tags:
        - User
      summary: Rota de remoção de usuário
      security:
        - authenticationUser: []
      responses:
        '200':
          $ref: '#/components/responses/200Remove'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
    patch:
      tags:
        - User
      summary: Rota de alteração de usuário
      security:
        - authenticationUser: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          $ref: '#/components/responses/200Update'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'

  /games:
    post:
      tags:
        - Game
      summary: Rota de criação de jogos
      security:
        - authenticationUser: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/Game'
      responses:
        '201':
          $ref: '#/components/responses/201'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
    get:
      tags:
        - Game
      summary: Rota de listagem de jogos
      security:
        - authenticationUser: []
      parameters:
        - in: query
          name: title
          schema:
            type: string
        - $ref: '#/components/parameters/limitParam'
        - $ref: '#/components/parameters/pageParam'
      responses:
        '200':
          $ref: '#/components/responses/200List'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
  /games/{id}:
    parameters:
      - $ref: '#/components/parameters/idParam'
    get:
      tags:
        - Game
      summary: Rota de detalhamento de jogos
      security:
        - authenticationUser: []
      responses:
        '200':
          $ref: '#/components/responses/200Detail'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    delete:
      tags:
        - Game
      summary: Rota de remoção de jogos
      security:
        - authenticationUser: []
      responses:
        '200':
          $ref: '#/components/responses/200Remove'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
    patch:
      tags:
        - Game
      summary: Rota de alteração de jogos
      security:
        - authenticationUser: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Game'
      responses:
        '200':
          $ref: '#/components/responses/200Detail'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'

  /media:
    post:
      tags:
        - Media
      summary: Rota de criação de mídias
      security:
        - authenticationUser: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/Media'
      responses:
        '201':
          $ref: '#/components/responses/201'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
    get:
      tags:
        - Media
      summary: Rota de listagem de mídias
      security:
        - authenticationUser: []
      parameters:
        - in: query
          name: platform
          schema:
            type: string
            enum: [PS3, PS4, XBOX360, XBOXONE, NINTENDO3DS, NINTENDOSWITCH]
        - in: query
          name: game
          schema:
            type: string
        - in: query
          name: owner
          schema:
            type: string
        - in: query
          name: mineOnly
          schema:
            type: boolean
        - $ref: '#/components/parameters/limitParam'
        - $ref: '#/components/parameters/pageParam'
      responses:
        '200':
          $ref: '#/components/responses/200List'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
  /media/{id}:
    parameters:
      - $ref: '#/components/parameters/idParam'
    get:
      tags:
        - Media
      summary: Rota de detalhamento de mídias
      security:
        - authenticationUser: []
      responses:
        '200':
          $ref: '#/components/responses/200Detail'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    delete:
      tags:
        - Media
      summary: Rota de remoção de mídias
      security:
        - authenticationUser: []
      responses:
        '200':
          $ref: '#/components/responses/200Remove'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
    patch:
      tags:
        - Media
      summary: Rota de alteração de mídias
      security:
        - authenticationUser: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Media'
      responses:
        '200':
          $ref: '#/components/responses/200Update'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'

  /library:
    get:
      tags:
        - Library
      summary: Rota de listagem de biblioteca
      security:
        - authenticationUser: []
      parameters:
        - in: query
          name: _id
          schema:
            type: string
        - in: query
          name: title
          schema:
            type: string
        - in: query
          name: mediaOwner
          schema:
            type: string
        - in: query
          name: mediaId
          schema:
            type: string
        - in: query
          name: mediaPlatform
          schema:
            type: string
            enum: [PS3, PS4, XBOX360, XBOXONE, NINTENDO3DS, NINTENDOSWITCH]
        - $ref: '#/components/parameters/limitParam'
        - $ref: '#/components/parameters/pageParam'
      responses:
        '200':
          $ref: '#/components/responses/200List'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'

  /loans:
    post:
      tags:
        - Loan
      summary: Rota de criação de empréstimo
      security:
        - authenticationUser: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/Loan'
      responses:
        '201':
          $ref: '#/components/responses/201'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
    get:
      tags:
        - Loan
      summary: Rota de listagem de empréstimo
      security:
        - authenticationUser: []
      parameters:
        - $ref: '#/components/parameters/limitParam'
        - $ref: '#/components/parameters/pageParam'
      responses:
        '200':
          $ref: '#/components/responses/200List'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
  /loans/{id}:
    parameters:
      - $ref: '#/components/parameters/idParam'
    get:
      tags:
        - Loan
      summary: Rota de detalhamento de empréstimo
      security:
        - authenticationUser: []
      responses:
        '200':
          $ref: '#/components/responses/200Detail'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    delete:
      tags:
        - Loan
      summary: Rota de remoção de empréstimo
      security:
        - authenticationUser: []
      responses:
        '200':
          $ref: '#/components/responses/200Remove'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
    patch:
      tags:
        - Loan
      summary: Rota de alteração de empréstimo
      security:
        - authenticationUser: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                action:
                  type: string
                  enum: ['LEND', 'RETURN']
      responses:
        '200':
          $ref: '#/components/responses/200Update'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'

components:
  securitySchemes:
    authenticationUser:
      type: apiKey
      name: Authorization
      in: header
      description: Token JWT do usuário
  parameters:
    idParam:
      in: path
      name: id
      description: Object Id
      schema:
        type: string
    limitParam:
      in: query
      name: limit
      description: Limite de dados a serem retornados
      schema:
        type: integer
    pageParam:
      in: query
      name: page
      description: Página a ser consultada
      schema:
        type: integer
    nameParam:
      in: query
      name: name
      description: Nome
      schema:
        type: string
    emailParam:
      in: body
      name: email
      description: Email
      schema:
        type: string
        format: email
    passwordParam:
      in: body
      name: password
      description: Password
      schema:
        type: string
        format: password
  responses:
    '200Detail':
      description: Objeto detalhado
    '200List':
      description: Retorna a lista de objetos e a contagem total
    '200Remove':
      description: Objeto removido
    '200Update':
      description: Objeto atualizado
    '201':
      description: Objeto criado
    '400':
      description: Erro de validação
    '401':
      description: Unauthorized
    '403':
      description: Forbidden
    '404':
      description: Objeto não encontrado
    '500':
      description: Erro interno do servidor
  schemas:
    User:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
          format: email
        phone:
          type: string
        password:
          type: string
          format: password
        state:
          type: string
        city:
          type: string
    Game:
      type: object
      properties:
        title:
          type: string
    Media:
      type: object
      properties:
        platform:
          type: string
          enum: [PS3, PS4, XBOX360, XBOXONE, NINTENDO3DS, NINTENDOSWITCH]
        game:
          type: string
    Loan:
      type: object
      properties:
        media:
          type: string
